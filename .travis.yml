# Travis-CI build script for tlx

language: cpp

sudo: false

matrix:
  include:
    # gcc 4.9 with AddressSanitizer, Debug & Release
    - env: CMAKE_CC="gcc-4.9" CMAKE_CXX="g++-4.9" BUILD_TYPE="Debug" COMPILER_FLAGS="-fsanitize=address"
      os: linux
      addons: &gcc49
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports # cmake 3.2.3
          packages:
            - cmake
            - cmake-data
            - g++-4.9

    # gcc 5.x without AddressSanitizer, Debug & Release, with SWIG and OpenMPI
    - env: CMAKE_CC="gcc-5" CMAKE_CXX="g++-5" BUILD_TYPE="Debug" COMPILER_FLAGS=""
      os: linux
      addons: &gcc5
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports # cmake 3.2.3
          packages:
            - cmake
            - cmake-data
            - g++-5
            - doxygen

    - env: CMAKE_CC="gcc-5" CMAKE_CXX="g++-5" BUILD_TYPE="Release" COMPILER_FLAGS="" BUILD_DOXYGEN="1"
      os: linux
      addons: *gcc5

    # clang 3.7 without AddressSanitizer, Debug & Release
    - env: CMAKE_CC="clang-3.7" CMAKE_CXX="clang++-3.7" BUILD_TYPE="Debug" COMPILER_FLAGS=""
      os: linux
      addons: &clang37
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
            - george-edison55-precise-backports # cmake 3.2.3
          packages:
            - cmake
            - cmake-data
            - clang-3.7

    # clang 3.7 without AddressSanitizer (there are some system-dependent LeakSanitizer errors)
    - env: CMAKE_CC="clang-3.7" CMAKE_CXX="clang++-3.7" BUILD_TYPE="Release" COMPILER_FLAGS=""
      os: linux
      addons: *clang37

    # clang 3.7 on MacOSX without AddressSanitizer, Debug & Release, not FULL_BUILD
    - env: CMAKE_CC="clang" CMAKE_CXX="clang++" BUILD_TYPE="Debug" COMPILER_FLAGS=""
      os: osx

    - env: CMAKE_CC="clang" CMAKE_CXX="clang++" BUILD_TYPE="Release" COMPILER_FLAGS=""
      os: osx

env:
  global:
    # LeakSanitizer suppressions
    - LSAN_OPTIONS="suppressions=$PWD/misc/leak_sanitizer.supp"
    # die on ThreadSanitizer errors
    - TSAN_OPTIONS="halt_on_error=1"

before_script:

  # print out some version numbers
  - $CMAKE_CXX --version
  - cmake --version

  # enable -Werror on tlx/tlx master branch
  - if [ "$TRAVIS_BRANCH" == "master" -a "$TRAVIS_REPO_SLUG" == "tlx/tlx" ]; then
      COMPILER_FLAGS="$COMPILER_FLAGS -Werror";
    fi

  # configure
  - mkdir build; cd build
  - cmake
      -DCMAKE_BUILD_TYPE="$BUILD_TYPE"
      -DCMAKE_C_COMPILER="$CMAKE_CC" -DCMAKE_CXX_COMPILER="$CMAKE_CXX"
      -DCMAKE_C_FLAGS="$COMPILER_FLAGS" -DCMAKE_CXX_FLAGS="$COMPILER_FLAGS"
      -DTLX_BUILD_TESTS=ON -DTLX_TRY_COMPILE_HEADERS=ON
      $CMAKE_ARGS ..

script:
  - make -j2 && ctest

# Generate and deploy documentation
after_success:
  - cd $TRAVIS_BUILD_DIR
  - if [ -n "$BUILD_DOXYGEN" -a "$TRAVIS_REPO_SLUG" == "tlx/tlx" -a "$TRAVIS_BRANCH" == "master" ]; then
      ./misc/mk-doxygen-travis.sh;
    fi
